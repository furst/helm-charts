kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
        k8s-app: {{ .Values.app.name }}
    spec:
      tolerations:
      # these tolerations are to have the daemonset runnable on control plane nodes
      # remove them if your control plane nodes should not run pods
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - operator: "Exists"
        effect: "NoSchedule"
      - operator: "Exists"
        effect: "NoExecute"
      volumes:
        - name: mw-deployment-otel-config-volume
          configMap:
            name: mw-deployment-otel-config
            items:
              - key: otel-config
                path: otel-config.yaml
      containers:
        - args:
            - mw-agent
            - start
            - --otel-config-file
            - /app/otel-config.yaml
          volumeMounts:
            - name: mw-deployment-otel-config-volume
              mountPath: /app
          env:
            - name: MW_TARGET
              value: {{ .Values.mw.target }}
            - name: MW_API_KEY
              value: {{ .Values.mw.apiKey }}
            - name: MW_DOCKER_ENDPOINT
              value: {{ .Values.mw.dockerEndPoint }}
            - name: MW_KUBE_CLUSTER_NAME
              value: {{ .Values.cluster.name }}
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: K8S_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          image: {{ .Values.image.repository }}:{{ .Values.image.deploymentTag }}
          imagePullPolicy: {{.Values.image.pullPolicy}}
          name: {{ .Values.image.name }}
          securityContext:
            privileged: true
          resources: {}
      restartPolicy: Always
      serviceAccountName: {{ .Values.serviceAccount.name }}