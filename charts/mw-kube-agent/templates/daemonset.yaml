kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ .Values.daemonSet.name }}
  namespace: {{.Values.namespace.name}}
spec:
  selector:
    matchLabels:
      {{- include "mw-kube-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mw-kube-agent.selectorLabels" . | nindent 8 }}
    spec:
      tolerations:
      # these tolerations are to have the daemonset runnable on control plane nodes
      # remove them if your control plane nodes should not run pods
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      volumes:
      # volume binding for log collection 
      - name: varlog
        hostPath:
          path: /var/log
      - name: varrun
        hostPath:
          path: /var/run/docker.sock
      - name: runcontainerd
        hostPath:
          path: /run/containerd/containerd.sock
      # volume binding for log collection
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      containers:
        - args:
            - mw-agent
            - start
          env:
            - name: MW_TARGET
              value: {{ .Values.mw.target }}
            - name: MW_API_KEY
              value: {{ .Values.mw.apiKey }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{ .Chart.Name }}
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /var/log
            name: varlog
            readOnly: true
          - mountPath: /var/run/docker.sock
            name: varrun
            readOnly: true
          - mountPath: /run/containerd/containerd.sock
            name: runcontainerd
            readOnly: true
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          resources: {}
      restartPolicy: Always
      serviceAccountName: {{ include "mw-kube-agent.serviceAccountName" . }}
